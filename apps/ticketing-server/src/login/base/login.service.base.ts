/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Login as PrismaLogin } from "@prisma/client";

export class LoginServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LoginCountArgs, "select">): Promise<number> {
    return this.prisma.login.count(args);
  }

  async logins<T extends Prisma.LoginFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoginFindManyArgs>
  ): Promise<PrismaLogin[]> {
    return this.prisma.login.findMany<Prisma.LoginFindManyArgs>(args);
  }
  async login<T extends Prisma.LoginFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoginFindUniqueArgs>
  ): Promise<PrismaLogin | null> {
    return this.prisma.login.findUnique(args);
  }
  async createLogin<T extends Prisma.LoginCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoginCreateArgs>
  ): Promise<PrismaLogin> {
    return this.prisma.login.create<T>(args);
  }
  async updateLogin<T extends Prisma.LoginUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoginUpdateArgs>
  ): Promise<PrismaLogin> {
    return this.prisma.login.update<T>(args);
  }
  async deleteLogin<T extends Prisma.LoginDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoginDeleteArgs>
  ): Promise<PrismaLogin> {
    return this.prisma.login.delete(args);
  }
}
